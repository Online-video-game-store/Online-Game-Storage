server:
  port: ${WEB-SERVER_PORT:0}

spring:
  application:
    name: "WEB-CLIENT"

  output.ansi.enabled: ALWAYS

  # ограничение на размер MultipartFile файлов
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 12MB


  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8080/realms/online-store-realm/protocol/openid-connect/certs
        # путь до Keycloack
        uri-base: http://localhost:8080/realms/online-store-realm   # /.well-known/openid-configuration

  # Cloud Bus + RabbitMQ
  cloud:
    function:
      definition: channelOrderEvents;channelOrderCancel
    stream:
      default-binder: rabbit
      function:
        bindings:
          channelOrderEvents-in-0: ch-pk8000-order-in
          channelOrderCancel-in-0: ch-pk8000-cancel-in
      bindings:
        # Входные каналы
        ch-pk8000-order-in:
          destination: pk8000.order.exchange
          group: ${spring.application.name}-orders-group
          content-type: application/json
        ch-pk8000-cancel-in:
          destination: pk8000.cancel.exchange
          group: ${spring.application.name}-orders-group
          content-type: application/json
      rabbit:
        bindings:
          # Входные каналы
          ch-pk8000-order-in:
            consumer:
              exchange-type: direct
              declare-exchange: true
              auto-bind-dlq: true
              binding-routing-key: "order.done"
          ch-pk8000-cancel-in:
            consumer:
              exchange-type: direct
              declare-exchange: true
              auto-bind-dlq: true
              binding-routing-key: "order.fail"
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

# настройки Эврики
eureka:
  client:
    service-url:
      defaultZone:
        http://localhost:7777/eureka
    register-with-eureka: true                # Регистрация клиента в Eureka Server
    fetch-registry: true                      # Извлечение реестра из Eureka Server
    retry-on-connect-errors: true             # Повторные подключения к Eureka при сбоях
  instance:
    prefer-ip-address: false                  # Использовать IP-адрес вместо имени хоста
    lease-renewal-interval-in-seconds: 10     # Интервал отправки heartbeats
    lease-expiration-duration-in-seconds: 30  # Таймаут для истечения lease (сердцебиений)

#logging:
#  level:
#    org.springframework.security.oauth2: DEBUG
#    org.springframework.security: DEBUG
#    org.springframework.web: DEBUG
#    org.springframework.security.jwt: DEBUG
#    org.springframework.security.oauth2.client: DEBUG
#    org.springframework.security.oauth2.core: DEBUG
