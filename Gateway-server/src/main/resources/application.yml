server:
  port: 9000

spring:
  application:
    name: "GATEWAY-SERVER"

  output:
    ansi:
      enabled: ALWAYS

  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8080/realms/online-store-realm/protocol/openid-connect/certs
      client:
        provider:
          keycloak:
            issuer-uri: http://localhost:8080/realms/online-store-realm
        registration:
          online-store-client-id:
            provider: keycloak
            client-id: online-store-client-id
            client-secret: ${CLIENT_SECRET:oB4Wpq1rP190Y0Bs9nGQGoloTkv0GXlm}
            authorization-grant-type: authorization_code
            scope: openid

  cloud:
    gateway:
      default-filters:
        - TokenRelay=
        - PreserveHostHeader
      discovery:
        locator:
          enabled: true
          lower-case-service-id: false
      routes:
        - id: web-client
          uri: lb://WEB-CLIENT
          predicates:
            - Path=/pk8000/catalog/**, /pk8000/catalog/static/**, /pk8000/auth/**, /pk8000/user/api/**
          filters:
            - Retry=3         # Повторить запрос до 3 раз при сбое

        - id: websocket-route
          uri: lb://WEB-CLIENT
          predicates:
            - Path=/ws/notifications
          filters:
            - RemoveRequestHeader=Sec-WebSocket-Protocol

        - id: catalog-service
          uri: lb://CATALOG-SERVICE
          predicates:
            - Path=/pk8000/api/catalog/**, /pk8000/api/catalog-edit/**
          filters:
            - Retry=3         # Повторить запрос до 3 раз при сбое

    loadbalancer:
      retry:
        enabled: true                         # Повторные попытки при сбоях балансировщика
      healthCheck:
        enabled: true                         # включение проверки состояния для сервисов

#
# Настройки приложения.
# Адреса переадресации после аутентификации и выхода из профиля
application:
  login-uri: http://localhost:9000/pk8000/auth/login
  logout-uri: http://localhost:9000/pk8000/auth/logout
#  login-uri: http://localhost:9000/pk8000/catalog/index


eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:7777/eureka}
    register-with-eureka: true                # Регистрация клиента в Eureka Server
    fetch-registry: true                      # Извлечение реестра из Eureka Server
    retry-on-connect-errors: true             # Повторные подключения к Eureka при сбоях
  instance:
    prefer-ip-address: false                  # Использовать IP-адрес вместо имени хоста
    lease-renewal-interval-in-seconds: 10     # Интервал отправки heartbeats
    lease-expiration-duration-in-seconds: 30  # Таймаут для истечения lease (сердцебиений)

#logging:
#  level:
#    org.springframework.cloud.gateway: TRACE

#logging.level:
#  org.springframework.cloud.gateway: DEBUG
#  org.springframework.security: DEBUG
#  org.springframework.web.reactive.function.client: TRACE
#logging:
#  level:
#    org:
#      springframework: DEBUG
